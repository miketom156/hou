<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <context:property-placeholder location="classpath:social.properties,classpath:per.properties"/>

	<!-- 自动扫描bean，把作了注解的类转换为bean -->  
    <context:component-scan base-package="com.job5156.webapp.controller, com.job5156.api.controller,com.job5156.touch.controller" />
    
    <mvc:annotation-driven validator="validator">
		<mvc:message-converters register-defaults="true">
            <!-- StringHttpMessageConverter编码为UTF-8，防止乱码 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
                <property name = "supportedMediaTypes">
                    <list>
                        <bean class="org.springframework.http.MediaType">
                            <constructor-arg index="0" value="text"/>
                            <constructor-arg index="1" value="plain"/>
                            <constructor-arg index="2" value="UTF-8"/>
                        </bean>
                        <bean class="org.springframework.http.MediaType">
                            <constructor-arg index="0" value="*"/>
                            <constructor-arg index="1" value="*"/>
                            <constructor-arg index="2" value="UTF-8"/>
                        </bean>
                    </list>
                </property>
            </bean>
            <!-- 针对IE7/8浏览器解析JSON格式出现下载文件 -->
            <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- mvc:view-controller path="/" view-name="forward:/" /-->
    
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
    	<property name="validationMessageSource" ref="messageSource" />
    </bean>
    
    <mvc:resources mapping="/template/**" location="/WEB-INF/template/" />
    <mvc:resources mapping="/static/**" location="/static/" />
    <mvc:resources mapping="/content/**" location="/content/" />
    <mvc:resources mapping="/winopen/**" location="/winopen/" />
    <mvc:resources mapping="/*.html" location="/html/" />
    <mvc:resources mapping="/html/**/*.html" location="/html/"/>
    <mvc:resources mapping="/xml/*.xml" location="/xml/" />
    <mvc:resources mapping="/txt/*.txt" location="/txt/" />
    <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/**" />
    		<ref bean="globalInterceptor"/>
    	</mvc:interceptor>
    	<mvc:interceptor>
    		<mvc:mapping path="/s/p/**" />
    		<mvc:mapping path="/s/r/**" />
    		<mvc:mapping path="/corp/**"/>
    		<mvc:mapping path="/jobs/**"/>
    		<mvc:mapping path="/eshop/**"/>
    		<mvc:mapping path="/act/**"/>
    		<mvc:mapping path="/com/**"/>
    		<mvc:mapping path="/per/**"/>
    		<mvc:mapping path="/resume/**"/>
    		<ref bean="accessInterceptor"/>
    	</mvc:interceptor>
    	<mvc:interceptor>
    		<mvc:mapping path="/per/**" />
    		<mvc:mapping path="/per.*" />
    		<bean class="com.job5156.webapp.interceptor.PersonInterceptor">
            <property name="allowUrls">
                <list>
                    <!-- 如果请求中包含以下路径，则不进行拦截 -->
                    <value>/per/valid/mail/</value>
                </list>
            </property>
            </bean>
    	</mvc:interceptor>
    	<mvc:interceptor>
    		<mvc:mapping path="/com/**" />
    		<mvc:mapping path="/com.*" />
            <mvc:mapping path="/s/r/exact" />
    		<bean class="com.job5156.webapp.interceptor.CompanyInterceptor"/>
    	</mvc:interceptor>
    	<mvc:interceptor>
    		<mvc:mapping path="/sys/**" />
    		<mvc:mapping path="/sys.*" />
    		<mvc:mapping path="/s/r/sys/exact" />
    		<bean class="com.job5156.webapp.interceptor.SysInterceptor"/>
    	</mvc:interceptor>
    	<mvc:interceptor>
    		<mvc:mapping path="/sys/**" />
    		<mvc:mapping path="/sys.*" />
    		<bean class="com.job5156.webapp.interceptor.SysAuthorityInterceptor"/>
    	</mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/open/api/crm/**" />
            <ref bean="crmAuthorityInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/open/api/common/**" />
            <ref bean="commonAuthorityInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/open/api/*_*.json" />
            <bean class="com.job5156.webapp.interceptor.MobileInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/api/weixin/**" />
            <bean class="com.job5156.webapp.interceptor.WeixinInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/api/weixinwaibao/**" />
            <bean class="com.job5156.webapp.interceptor.WeixinWaiBaoInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/api/mobile/web/**" />
            <mvc:mapping path="/touch/**" />
            <mvc:mapping path="/api/touch/**" />
            <bean class="com.job5156.webapp.interceptor.TouchInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
	
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    	<property name="order" value="1" />
    	<property name="contentNegotiationManager">
    		<bean class="org.springframework.web.accept.ContentNegotiationManager">
    			<constructor-arg>
    				<bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
    					<constructor-arg>
    						<map>
    							<entry key="json" value="application/json"/>
    						</map>
    					</constructor-arg>
    				</bean>
    			</constructor-arg>
    		</bean>
    	</property>
    	<property name="defaultViews">
    		<list>
    			<!-- JSON View -->
    			<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
    		</list>
    	</property>
    </bean>
    
    <bean id="freemarkerResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
    	<property name="order" value="2"/>
    	<property name="suffix" value=".ftl" />
    	<property name="contentType" value="text/html;charset=utf-8" />
    	<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
    	<property name="cache" value="false" />
    </bean>
    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="order" value="3" />
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">
					error_all
				</prop>
			</props>
		</property>
	</bean> -->
	
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg type="java.util.Properties">
					<props>
						<prop key="kaptcha.textproducer.char.string">3478acefhjknmprtvwxy</prop>
						<prop key="kaptcha.border">yes</prop>
						<prop key="kaptcha.border.color">204,204,204</prop>
						<prop key="kaptcha.image.width">100</prop> 
						<prop key="kaptcha.image.height">30</prop>
						<prop key="kaptcha.textproducer.char.space">6</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop><!--验证码文本字符长度  默认为5 -->
						<prop key="kaptcha.textproducer.font.names">Arial</prop>
						<prop key="kaptcha.textproducer.font.size">22</prop><!--验证码文本字符大小  默认为40 -->
						<prop key="kaptcha.textproducer.font.color">black</prop>
						<prop key="kaptcha.background.clear.from">241,241,241</prop>
						<prop key="kaptcha.background.clear.to">255,255,255</prop>
						<prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop><!-- 验证码噪点生成对象  默认为DefaultNoise -->
						<prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop><!--验证码样式引擎有WaterRipple（水纹类似的）、ShadowGimpy(投影)、FishEyeGimpy（鱼眼）三种样式   默认为WaterRipple -->
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>

    <bean id="dynamicCaptchaProducer" class="com.job5156.webapp.component.image.DynamicKaptcha" scope="prototype">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg type="java.util.Properties">
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.border.color">204,204,204</prop>
						<prop key="kaptcha.image.width">150</prop> 
						<prop key="kaptcha.image.height">25</prop>
						<prop key="kaptcha.textproducer.char.space">2</prop>
						<prop key="kaptcha.textproducer.font.names">tahoma</prop>
						<prop key="kaptcha.textproducer.font.size">14</prop>
						<prop key="kaptcha.textproducer.font.color">black</prop>
						<prop key="kaptcha.background.clear.from">white</prop>
						<prop key="kaptcha.background.clear.to">white</prop>
						<prop key="kaptcha.word.impl">com.job5156.webapp.component.image.CustomWordRenderer</prop>
						<prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.NoNoise</prop>
					</props>
				</constructor-arg>
			</bean>
        </property>
    </bean>
</beans>